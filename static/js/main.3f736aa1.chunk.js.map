{"version":3,"sources":["images/rick.jpg","images/green.png","components/EpisodesCard.js","components/DetailCard.js","components/EpisodesList.js","components/Home.js","App.js","services/GetEpisodes.js","index.js"],"names":["module","exports","EpisodesCard","props","AllEpisodes","SearchEpisode","className","filter","myEpisode","name","toUpperCase","includes","map","item","index","key","src","serie","to","id","air_date","DetailCard","CartoonsCharactersInfo","updateCharactersInfo","Match","EpisodeId","parseInt","params","episodeInfo","find","characterIds","characters","replace","join","fetch","then","response","json","data","characterInfo","image","href","propTypes","PropTypes","array","string","EpisodesList","character","alt","Home","switchClick","getEpisodeInput","Fragment","type","onChange","placeholder","value","exact","path","render","routerProps","App","state","bind","this","getCartoons","setState","results","event","currentTarget","checked","history","push","match","React","Component","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3f736aa1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick.0468fdd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.f8d000af.png\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport serie from '../images/rick.jpg';\nimport PropTypes from 'prop-types';\n\n// card structure\nconst EpisodesCard = props => {\n    const {AllEpisodes, SearchEpisode} = props;\n    return (\n        <div className=\"row\">\n\n            {AllEpisodes\n                .filter(myEpisode => myEpisode.name.toUpperCase().includes(SearchEpisode.toUpperCase()))\n                .map((item, index) => {\n                    return (\n                        <div className=\"col s12 m6\" key={index}>\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img className=\"materialboxed\" src={serie}></img>\n                                    <span className=\"card-title\">{item.name}</span>\n                                    <Link className=\"CardLink\" to={\"/episode/\" + item.id}>\n                                        <div className=\"btn-floating halfway-fab waves-effect waves-light red\"><i\n                                            className=\"material-icons add-icons\">add</i></div>\n                                    </Link>\n                                </div>\n                                <div className=\"card-content\">\n                                    <p>{item.air_date}</p>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nEpisodesCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    SearchEpisode: PropTypes.string\n};\n\n\nexport default EpisodesCard;\n","import React from 'react';\nimport serie from '../images/rick.jpg';\nimport PropTypes from 'prop-types';\n\n//DETAIL CARD STRUCTURE\nconst DetailCard = props => {\n    const {AllEpisodes, CartoonsCharactersInfo, updateCharactersInfo, Match} = props;\n    const EpisodeId = parseInt(Match.params.id);\n    const episodeInfo = AllEpisodes.find(myEpisode => myEpisode.id === EpisodeId);\n\n    let characterIds = episodeInfo.characters.map(item =>{\n        return(item.replace('https://rickandmortyapi.com/api/character/', ''));\n    });\n    characterIds.join(',');\n\n    fetch('https://rickandmortyapi.com/api/character/' + characterIds )\n        .then(response => response.json())\n        .then(data => {\n            updateCharactersInfo(data);\n        });\n\n    return (\n        <div className=\"detailCard-container\">\n            <div className=\"col s12 m7\">\n                <h2 className=\"header\">{episodeInfo.name}</h2>\n                <div className=\"card horizontal\">\n                    <div className=\"card-image\">\n                        <img className=\"default-image\" src={serie}/>\n                    </div>\n                    <div className=\"card-stacked\">\n                        <div className=\"card-content\">\n                            <div>\n                                {CartoonsCharactersInfo\n                                    .map((characterInfo, index) => {\n                                        return(\n                                            <img className=\"character-image\" src={characterInfo.image}/>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                        <div className=\"card-action\">\n                            <a className=\"link-back\" href=\"/\">Go back</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    CartoonsCharactersInfo: PropTypes.array,\n    updateCharactersInfo: PropTypes.func,\n    Match: PropTypes.object\n};\n\n\nexport default DetailCard;\n\n","import React from 'react';\nimport character from '../images/green.png';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport DetailCard from \"./DetailCard\";\n\n\nconst EpisodesList = props => {\n    const {AllEpisodes, SearchEpisode} = props;\n    return (\n        <ul className=\"collection\">\n            {AllEpisodes\n                .filter(myEpisode => myEpisode.name.toUpperCase().includes(SearchEpisode.toUpperCase()))\n                .map((item, index) => {\n                    return (\n                        <li className=\"collection-item avatar\" key={index}>\n                            <img src={character} alt=\"\" className=\"circle\"/>\n                            <span className=\"title\">{item.name}</span>\n                            <p>{item.air_date}</p>\n                            <Link className=\"CardLink\" to={\"/episode/\" + item.id}>\n                                <div className=\"btn-floating halfway-fab waves-effect waves-light red btn-list\"><i\n                                    className=\"material-icons add-icons\">add</i></div>\n                            </Link>\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n};\n\nDetailCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    SearchEpisode: PropTypes.string\n};\n\nexport default EpisodesList;\n","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport EpisodesCard from \"./EpisodesCard\";\nimport EpisodesList from \"./EpisodesList\";\nimport PropTypes from 'prop-types';\n\n\nconst Home = props => {\n    const {AllEpisodes, switchClick, getEpisodeInput, SearchEpisode} = props;\n\n    return (\n        <React.Fragment>\n            <h1 className=\"mainTitle\">Rick & Morty</h1>\n            <div className=\"switch\">\n                <label>\n                    <i className=\"material-icons card-icon\">apps</i>\n                    <input type=\"checkbox\" onChange={switchClick}/>\n                    <span className=\"lever\"></span>\n                    <i className=\"material-icons list-icon\">dehaze</i>\n                </label>\n            </div>\n            <div className=\"app-filters\">\n                <input type=\"text\" className=\"searchEpisodes\" placeholder=\"Search your a favourite episode\" onChange={getEpisodeInput} value={SearchEpisode}/>\n            </div>\n            <Route\n                exact\n                path=\"/\"\n                render={routerProps => (\n                    <EpisodesCard\n                        AllEpisodes={AllEpisodes}\n                        SearchEpisode={SearchEpisode}\n                    />\n                )\n                }\n            />\n\n            <Route\n                exact\n                path=\"/list\"\n                render={routerProps => (\n                    <EpisodesList\n                        AllEpisodes={AllEpisodes}\n                        SearchEpisode={SearchEpisode}\n                    />\n                )}\n            />\n        </React.Fragment>\n    )\n};\n\nHome.propTypes = {\n    AllEpisodes: PropTypes.array,\n    switchClick: PropTypes.func,\n    SearchEpisode: PropTypes.string,\n    getEpisodeInput: PropTypes.func\n};\n\nexport default Home;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {GetEpisodes} from './services/GetEpisodes';\nimport Home from './components/Home';\nimport DetailCard from './components/DetailCard';\nimport './App.css';\nimport {withRouter} from 'react-router-dom'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            AllEpisodes: [],\n            CartoonsCharactersInfo: [],\n            SearchEpisode: ''\n        };\n\n        this.switchClick = this.switchClick.bind(this);\n        this.updateCharactersInfo = this.updateCharactersInfo.bind(this);\n        this.getEpisodeInput = this.getEpisodeInput.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.getCartoons();\n    }\n\n\n// Second part of fetch and Update state\n    getCartoons() {\n        GetEpisodes()\n            .then(data => {\n\n                this.setState({\n                    AllEpisodes: data.results\n                });\n            });\n    }\n\n    updateCharactersInfo(data) {\n        this.setState({\n            CartoonsCharactersInfo: data\n        });\n    }\n\n    switchClick(event) {\n        const switchValue = event.currentTarget.checked;\n        if(switchValue === true){\n            // From: https://tylermcginnis.com/react-router-programmatically-navigate/\n            this.props.history.push('/list')\n        }else{\n            this.props.history.push('/')\n        }\n    }\n\n    getEpisodeInput(event){\n        const SearchEpisode = event.currentTarget.value;\n        this.setState({\n            SearchEpisode: SearchEpisode\n        });\n    }\n\n\n    render() {\n        const {AllEpisodes, CartoonsCharactersInfo, SearchEpisode} = this.state;\n        return (\n            <div className=\"app\">\n                <Switch>\n                    <Route\n                        exact\n                        path={[\"/\", \"/list\"]}\n                        render={routerProps => (\n                            <Home\n                                AllEpisodes={AllEpisodes}\n                                SearchEpisode={SearchEpisode}\n                                switchClick={this.switchClick}\n                                getEpisodeInput={this.getEpisodeInput}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/episode/:id\"\n                        render={routerProps => (\n                            <DetailCard\n                                AllEpisodes={AllEpisodes}\n                                CartoonsCharactersInfo={CartoonsCharactersInfo}\n                                updateCharactersInfo={this.updateCharactersInfo}\n                                Match={routerProps.match}\n\n                            />\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    };\n}\n\nexport default withRouter(App);\n\n","const url = \"https://rickandmortyapi.com/api/episode/\";\n\nconst GetEpisodes = () => {\n    return fetch(url)\n        .then(response => response.json());\n};\n\nexport {GetEpisodes};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter> <App/> </HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}