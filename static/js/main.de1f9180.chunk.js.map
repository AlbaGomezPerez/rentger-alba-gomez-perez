{"version":3,"sources":["images/rick.jpg","images/green.png","components/EpisodesCard.js","components/DetailCard.js","components/EpisodesList.js","components/Home.js","App.js","services/GetEpisodes.js","index.js"],"names":["module","exports","EpisodesCard","props","AllEpisodes","SearchEpisode","className","filter","myEpisode","name","toUpperCase","includes","map","item","index","key","alt","src","serie","to","id","air_date","DetailCard","CartoonsCharactersInfo","updateCharactersInfo","Match","DataSwitchChecked","EpisodeId","parseInt","params","urlGoBack","undefined","length","episodeInfo","find","characterIds","characters","replace","join","fetch","then","response","json","data","characterInfo","image","propTypes","PropTypes","array","string","EpisodesList","character","Home","switchClick","getEpisodeInput","Fragment","type","onChange","checked","placeholder","value","exact","path","render","routerProps","App","state","bind","usersSwitchString","localStorage","getItem","usersSwitchParsed","JSON","parse","this","setState","getCartoons","results","event","switchValue","currentTarget","history","push","stringify","setItem","match","React","Component","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de1f9180.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick.0468fdd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green.f8d000af.png\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport serie from '../images/rick.jpg';\nimport PropTypes from 'prop-types';\n\n// Card structure\nconst EpisodesCard = props => {\n    const {AllEpisodes, SearchEpisode} = props;\n    return (\n        <div className=\"row\">\n            {AllEpisodes\n                .filter(myEpisode => myEpisode.name.toUpperCase().includes(SearchEpisode.toUpperCase()))\n                .map((item, index) => {\n                    return (\n                        <div className=\"col s12 m6\" key={index}>\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img className=\"materialboxed\" alt=\"Rick & Morty\" src={serie}></img>\n                                    <span className=\"card-title\">{item.name}</span>\n                                    <Link className=\"CardLink\" to={\"/episode/\" + item.id}>\n                                        <div className=\"btn-floating halfway-fab waves-effect waves-light red\"><i\n                                            className=\"material-icons add-icons\">add</i></div>\n                                    </Link>\n                                </div>\n                                <div className=\"card-content\">\n                                    <p>{item.air_date}</p>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nEpisodesCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    SearchEpisode: PropTypes.string\n};\n\n\nexport default EpisodesCard;\n","import React from 'react';\nimport serie from '../images/rick.jpg';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\n//Detail episode card structure\nconst DetailCard = props => {\n    const {AllEpisodes, CartoonsCharactersInfo, updateCharactersInfo, Match, DataSwitchChecked} = props;\n    //parse id of this episode\n    const EpisodeId = parseInt(Match.params.id);\n\n    //Get last data in localstorage\n    let urlGoBack = '';\n    if(DataSwitchChecked === false){\n        urlGoBack = '/';\n    }else{\n        urlGoBack = '/list';\n    };\n\n    //message \"loading\" while AllEpisodes are coming\n    if (AllEpisodes !== undefined && AllEpisodes.length > 0){\n        const episodeInfo = AllEpisodes.find(myEpisode => myEpisode.id === EpisodeId);\n\n        //Get id episode and fetch\n        let characterIds = episodeInfo.characters.map(item =>{\n            return(item.replace('https://rickandmortyapi.com/api/character/', ''));\n        });\n        characterIds.join(',');\n\n        fetch('https://rickandmortyapi.com/api/character/' + characterIds )\n            .then(response => response.json())\n            .then(data => {\n                updateCharactersInfo(data);\n            });\n\n        return (\n            <div className=\"detailCard-container\">\n                <div className=\"col s12 m7\">\n                    <h2 className=\"header\">{episodeInfo.name}</h2>\n                    <div className=\"card horizontal\">\n                        <div className=\"card-image\">\n                            <img className=\"default-image\"  alt=\"Rick & Morty\" src={serie}/>\n                        </div>\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n                                <div>\n                                    {CartoonsCharactersInfo\n                                        .map((characterInfo, index) => {\n                                            return(\n                                                <img key={index} className=\"character-image\" alt={characterInfo.name} src={characterInfo.image}/>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"card-action\">\n                                <Link className=\"link-back\" to={urlGoBack}>Go back</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return('loading');\n    }\n\n};\n\nDetailCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    CartoonsCharactersInfo: PropTypes.array,\n    updateCharactersInfo: PropTypes.func,\n    Match: PropTypes.object,\n    DataSwitchChecked: PropTypes.bool\n};\n\n\nexport default DetailCard;\n\n","import React from 'react';\nimport character from '../images/green.png';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport DetailCard from \"./DetailCard\";\n\n//List structure\nconst EpisodesList = props => {\n    const {AllEpisodes, SearchEpisode} = props;\n    return (\n        <ul className=\"collection\">\n            {AllEpisodes\n                .filter(myEpisode => myEpisode.name.toUpperCase().includes(SearchEpisode.toUpperCase()))\n                .map((item, index) => {\n                    return (\n                        <li className=\"collection-item avatar\" key={index}>\n                            <img src={character} alt=\"Rick & Morty\" className=\"circle\"/>\n                            <span className=\"title\">{item.name}</span>\n                            <p>{item.air_date}</p>\n                            <Link className=\"CardLink\" to={\"/episode/\" + item.id}>\n                                <div className=\"btn-floating halfway-fab waves-effect waves-light red btn-list\"><i\n                                    className=\"material-icons add-icons\">add</i></div>\n                            </Link>\n                        </li>\n                    );\n                })}\n        </ul>\n    );\n};\n\nDetailCard.propTypes = {\n    AllEpisodes: PropTypes.array,\n    SearchEpisode: PropTypes.string\n};\n\nexport default EpisodesList;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport EpisodesCard from \"./EpisodesCard\";\nimport EpisodesList from \"./EpisodesList\";\nimport PropTypes from 'prop-types';\n\n\nconst Home = props => {\n    const {AllEpisodes, switchClick, getEpisodeInput, SearchEpisode, DataSwitchChecked} = props;\n\n    return (\n        <React.Fragment>\n            <h1 className=\"mainTitle\">Rick & Morty</h1>\n            <div className=\"switch\">\n                <label>\n                    <i className=\"material-icons card-icon\">apps</i>\n                    <input type=\"checkbox\" onChange={switchClick} checked={DataSwitchChecked}/>\n                    <span className=\"lever\"></span>\n                    <i className=\"material-icons list-icon\">dehaze</i>\n                </label>\n            </div>\n            <div className=\"app-filters\">\n                <input type=\"text\" className=\"searchEpisodes\" placeholder=\"Search your a favourite episode\" onChange={getEpisodeInput} value={SearchEpisode}/>\n            </div>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={routerProps => (\n                        <EpisodesCard\n                            AllEpisodes={AllEpisodes}\n                            SearchEpisode={SearchEpisode}\n                        />\n                    )\n                    }\n                />\n                <Route\n                    path=\"/list\"\n                    render={routerProps => (\n                        <EpisodesList\n                            AllEpisodes={AllEpisodes}\n                            SearchEpisode={SearchEpisode}\n                        />\n                    )}\n                />\n            </Switch>\n        </React.Fragment>\n    )\n};\n\nHome.propTypes = {\n    AllEpisodes: PropTypes.array,\n    switchClick: PropTypes.func,\n    SearchEpisode: PropTypes.string,\n    getEpisodeInput: PropTypes.func,\n    DataSwitchChecked: PropTypes.bool\n};\n\nexport default Home;\n","import React from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport {GetEpisodes} from './services/GetEpisodes';\nimport Home from './components/Home';\nimport DetailCard from './components/DetailCard';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            AllEpisodes: [],\n            CartoonsCharactersInfo: [],\n            SearchEpisode: '',\n            DataSwitchChecked: ''\n        };\n\n        this.switchClick = this.switchClick.bind(this);\n        this.updateCharactersInfo = this.updateCharactersInfo.bind(this);\n        this.getEpisodeInput = this.getEpisodeInput.bind(this);\n    }\n\n\n    componentDidMount() {\n        let usersSwitchString = localStorage.getItem(\"usersData\");\n        if (usersSwitchString !== undefined && usersSwitchString !== null) {\n            let usersSwitchParsed = JSON.parse(usersSwitchString);\n            this.setState({\n                DataSwitchChecked: usersSwitchParsed\n            })\n        }\n        this.getCartoons();\n    }\n\n\n// Second part of fetch and Update state\n    getCartoons() {\n        GetEpisodes()\n            .then(data => {\n                this.setState({\n                    AllEpisodes: data.results\n                });\n            });\n    }\n\n    //Characters info\n    updateCharactersInfo(data) {\n        this.setState({\n            CartoonsCharactersInfo: data\n        });\n    }\n\n    //get switch checked\n    // From: https://tylermcginnis.com/react-router-programmatically-navigate/\n    switchClick(event) {\n        const switchValue = event.currentTarget.checked;\n        if (switchValue === true) {\n            this.props.history.push('/list')\n        } else {\n            this.props.history.push('/')\n        }\n        //Local storage. Save switch checked\n        let usersSwitchString = JSON.stringify(switchValue);\n        localStorage.setItem(\"usersData\", usersSwitchString);\n        this.setState({\n            DataSwitchChecked: switchValue\n        })\n    }\n\n    getEpisodeInput(event) {\n        const SearchEpisode = event.currentTarget.value;\n        this.setState({\n            SearchEpisode: SearchEpisode\n        });\n    }\n\n\n    render() {\n        const {AllEpisodes, CartoonsCharactersInfo, SearchEpisode, DataSwitchChecked} = this.state;\n        return (\n            <div className=\"app\">\n                <Switch>\n                    <Route\n                        exact\n                        path={[\"/\", \"/list\"]}\n                        render={routerProps => (\n                            <Home\n                                AllEpisodes={AllEpisodes}\n                                SearchEpisode={SearchEpisode}\n                                DataSwitchChecked={DataSwitchChecked}\n                                switchClick={this.switchClick}\n                                getEpisodeInput={this.getEpisodeInput}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/episode/:id\"\n                        render={routerProps => (\n                            <DetailCard\n                                AllEpisodes={AllEpisodes}\n                                CartoonsCharactersInfo={CartoonsCharactersInfo}\n                                DataSwitchChecked={DataSwitchChecked}\n                                updateCharactersInfo={this.updateCharactersInfo}\n                                Match={routerProps.match}\n\n                            />\n                        )}\n                    />\n                </Switch>\n            </div>\n        );\n    };\n}\n\nexport default withRouter(App);\n\n","const url = \"https://rickandmortyapi.com/api/episode/\";\n\nconst GetEpisodes = () => {\n    return fetch(url)\n        .then(response => response.json());\n};\n\nexport {GetEpisodes};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter> <App/> </HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}